unit TestUMain;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, OverbyteIcsWndControl, SysUtils, OverbyteIcsWSocket, Windows,
  OverbyteIcsHttpSrv, StdCtrls, Messages, OverbyteIcsWSocketS, Variants, Controls,
  Classes, UMain, Forms, Dialogs, Graphics;

type
  // Test methods for class TConfiguration

  TestTConfiguration = class(TTestCase)
  strict private
    FConfiguration: TConfiguration;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestNamePartToUpper;
  end;

implementation

procedure TestTConfiguration.SetUp;
begin
  FConfiguration := TConfiguration.Create;
end;

procedure TestTConfiguration.TearDown;
begin
  FConfiguration.Free;
  FConfiguration := nil;
end;

procedure TestTConfiguration.TestNamePartToUpper;
begin
  CheckEquals('PORT=8080', TConfiguration.NamePartToUpper('PORT=8080'), 'No spaces');
  CheckEquals('PORT=8080', TConfiguration.NamePartToUpper('port=8080'), 'Case sensitivity');
  CheckEquals('PORT=8080', TConfiguration.NamePartToUpper('port     =8080'), 'Trainling spaces ignore - 1');
  CheckEquals('PORT=8080', TConfiguration.NamePartToUpper('port  =      8080'), 'Trainling spaces ignore - 2');
  CheckEquals('PORT=8080', TConfiguration.NamePartToUpper('port=  8080'), 'Trainling spaces ignore - 3');
  CheckEquals('', TConfiguration.NamePartToUpper(''), 'Empty string');
  CheckEquals('', TConfiguration.NamePartToUpper('   '), 'Empty string with spaces');
  CheckEquals('PORT=', TConfiguration.NamePartToUpper('port  =  '), 'No value');
  CheckEquals('8080', TConfiguration.NamePartToUpper('=  8080 '), 'No name');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTConfiguration.Suite);
end.

